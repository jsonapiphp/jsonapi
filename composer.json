{
    "name": "jsonapiphp/jsonapi",
    "description": "Framework agnostic JSON API (jsonapi.org) implementation",
    "license": "Apache-2.0",
    "keywords": [
        "jsonapi.org",
        "json-api",
        "jsonapi",
        "neomerx",
        "json",
        "api"
    ],
    "authors": [
        {
            "name": "neomerx",
            "email": "info@neomerx.com"
        }
    ],
    "homepage": "https://github.com/jsonapiphp/jsonapi",
    "support": {
        "issues": "https://github.com/jsonapiphp/jsonapi/issues"
    },
    "funding": [
        {
            "type": "github",
            "url": "https://github.com/sponsors/PabloKowalczyk"
        }
    ],
    "require": {
        "php": ">=7.4.0"
    },
    "require-dev": {
        "ergebnis/composer-normalize": "^2.28",
        "friendsofphp/php-cs-fixer": "^3.8",
        "mockery/mockery": "^1.0",
        "phpmd/phpmd": "^2.6",
        "phpstan/phpstan": "^1.7",
        "phpstan/phpstan-phpunit": "^1.1",
        "phpstan/phpstan-strict-rules": "^1.2",
        "phpunit/phpunit": "^9.5",
        "squizlabs/php_codesniffer": "^2.9",
        "symfony/phpunit-bridge": "^6.1"
    },
    "minimum-stability": "stable",
    "autoload": {
        "psr-4": {
            "Neomerx\\JsonApi\\": "src/"
        },
        "files": [
            "src/I18n/format.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Neomerx\\Tests\\JsonApi\\": "tests/",
            "Neomerx\\Samples\\JsonApi\\": "sample/",
            "JsonApiPhp\\JsonApi\\Perf\\": "perf/src"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true
        }
    },
    "scripts": {
        "bench-01": "docker compose -f ./perf/docker-compose.yml run --rm cli_php blackfire --samples 40 run php -d zend.assertions=-1 01-encode-simple-single-resource.php",
        "bench-02": "docker compose -f ./perf/docker-compose.yml run --rm cli_php blackfire --samples 40 run php -d zend.assertions=-1 02-encode-long-list-of-simple-resources.php",
        "checks": [
            "@test-cs-fixer",
            "@phpstan:check",
            "@php vendor/bin/phpunit"
        ],
        "cs-fixer": "./vendor/bin/php-cs-fixer fix --diff -v --ansi",
        "phpstan:check": "@php vendor/bin/phpstan analyse -c phpstan.neon src tests",
        "test": [
            "@test-unit",
            "@test-cs",
            "@test-md",
            "@test-cs-fixer"
        ],
        "test-cs": "./vendor/bin/phpcs -p -s --standard=PSR2 ./src ./tests",
        "test-cs-fixer": "./vendor/bin/php-cs-fixer fix --diff --dry-run -v",
        "test-md": "./vendor/bin/phpmd ./src text codesize,controversial,cleancode,design,unusedcode,naming",
        "test-unit": "./vendor/phpunit/phpunit/phpunit --coverage-text",
        "test-unit-phpdbg": "phpdbg -qrr ./vendor/bin/phpunit --coverage-text"
    }
}
